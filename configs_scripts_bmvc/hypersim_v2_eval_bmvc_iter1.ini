[Run id]
datetime = 

[General]
; set working resolution 
WORKING_W = 256
WORKING_H = 256
; yes / no -> enable / disable using cache for db paths
use_cache = no
; path to store cache file
CACHE_NAME = my_cache_hypersim_eval_iter1


; yes / no -> enable / disable train step
do_train = no
; yes / no -> enable / disable store step
do_store_predictions = no
; yes / no -> enable / disable eval step 
do_test = yes

; replica / hypersim -> dataset name 
DATASET_NAME = hypersim

[GraphStructure]
;  Available tasks/experts:
;       Index   | Full Name                 | Alias 
;       ---------------------------------------------------
;       0       | RGB                       | rgb
;       1       | Halftone                  | halftone_gray
;       2       | Grayscale                 | grayscale 
;       3       | HSV                       | hsv
;       4       | Depth                     | depth_xtc
;       5       | Surface normals           | normals_xtc
;       6       | Small low-level edges     | edges_sobel_small
;       7       | Medium low-level edges    | edges_sobel_medium
;       8       | Large low-level edges     | edges_sobel_large
;       9       | High-level edges          | edges_dexined
;       10      | Superpixel                | superpixel_fcn
;       11      | Cartoon                   | cartoon_wb
;       12      | Semantic segmentation     | sem_seg_hrnet

; Define subset of nodes
;   - if selector_map is not defined => default behavior - use all 13 nodes 
;   - use above indexes to identify nodes 
;   - example  for using only RGB, Depth and Surface normals nodes
;          selector_map = 0, 4, 5
; selector_map = 0, 1, 2, 3, 4, 5,6, 7, 8, 9, 10, 11, 12

; Restrict the graph to consider only edges towards a certain node 
;  - to be able to easily split the computations
;  - use above aliases to identify nodes 
;  - example - restrict the graph to contain only edges towards RGB node
only_edges_to_dst = rgb
;only_edges_to_dst = depth_xtc
;only_edges_to_dst = normals_xtc

[PathsIter]
; Set dataset paths
; [SPLIT] - can be TRAIN, VALID, TEST
;
; ITER_[SPLIT]_STORE_PATH  - path where we store results of current iteration (when do_store_predictions=yes)
;                          - can contain only one path
; ITER_[SPLIT]_PATH - path for current pseudo-labels / node views
;                   - can have multiple paths, for eg.:
;                           ITER_TRAIN_PATH = path_1
;                                   path_2
;                                   ...
;                                   path_n 
; ITER_[SPLIT]_GT_DST_PATH  - path for ground-truth annotations - for testing purpose and for nodes with implicit ground-truth (e.g. rgb)
;                           - can have multiple paths 
; ITER_[SPLIT]_FIRST_K - use only first k samples 
;                      - if (-1) => use all samples
ITER_TRAIN_STORE_PATH = 
ITER_TRAIN_PATH = /data/multi-domain-graph/datasets/datasets_preproc_exp/hypersim_v2/train1
ITER_TRAIN_GT_DST_PATH = /data/multi-domain-graph/datasets/datasets_preproc_gt/hypersim_v2/train1
ITER_TRAIN_FIRST_K = -1

ITER_VALID_STORE_PATH = 
ITER_VALID_PATH =  /data/multi-domain-graph/datasets/datasets_preproc_exp/hypersim_v2/valid
ITER_VALID_GT_DST_PATH = /data/multi-domain-graph/datasets/datasets_preproc_gt/hypersim_v2/valid
ITER_VALID_FIRST_K = -1

ITER_TEST_STORE_PATH = 
ITER_TEST_PATH = /data/multi-domain-graph/datasets/datasets_preproc_exp/hypersim_v2/test
ITER_TEST_GT_DST_PATH = /data/multi-domain-graph/datasets/datasets_preproc_gt/hypersim_v2/test
ITER_TEST_FIRST_K = -1

[Logs]
; Logs setup 
tensorboard_dir = runs/hypersim_v2_eval_bmvc_iter1
tensorboard_prefix = hypersim_v2_eval_bmvc_iter1
silent = no


[Edge Models]
; losses employed for classification edges 
classif_losses = cross_entropy
classif_losses_weights = 1

; losses employed for regression edges 
regression_losses = l2, ssim
regression_losses_weights = 1, 1

; kernel for SSIM loss 
ssim_loss_kernel = 11 

; starting epoch for train - if 0 => start from scratch
; epoch to be evaluated in eval mode 
start_epoch = 100
; number of training epochs
n_epochs = 0
; path from where we load models 
load_path = /data/multi-domain-graph/models/hypersim_v2_iter1_all_thesasme
; path where we store models 
save_path = /data/multi-domain-graph/models/
; checkpointing interval
save_epochs_distance = 10
; yes / no -> enable / disable model saving
save_models = no

[Training]
; Training edges setup 
optimizer = sgd
learning_rate = 5e-2
weight_decay = 1e-3
momentum = 0.9
nesterov = true
amsgrad = true
reduce_lr_patience = 10
reduce_lr_factor = 5e-1
reduce_lr_threshold = 1e-2
reduce_lr_min_lr = 5e-5

[Ensemble]
; Selection Ensemble setup 

; similarity function
;   values: ssim, l1, l2, equal, psnr, lpips
similarity_fct = l1

; kernel function 
;   values: flat, flat_weighted, gauss
kernel_fct = flat_weighted

; mean shift threshold, range [0, 1]
meanshiftiter_thresholds = 0.25
; combine function 
;   values: mean, median
comb_type = mean